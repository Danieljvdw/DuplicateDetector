<Window x:Class="DuplicateDetector.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:DuplicateDetector.ViewModels"
        xmlns:conv="clr-namespace:DuplicateDetector.Converters"
        mc:Ignorable="d"
        Title="Duplicate Detector" Height="600" Width="900">

    <Window.DataContext>
        <vm:MainViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <conv:ByteSizeConverter x:Key="ByteSizeConverter"/>
        <conv:EnumDescriptionConverter x:Key="EnumDescriptionConverter"/>
    </Window.Resources>

    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="5"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Toolbar -->
        <StackPanel Orientation="Horizontal" Grid.Row="0" Margin="0,0,0,10" VerticalAlignment="Center" HorizontalAlignment="Left">
            <Button Content="Scan" Command="{Binding ScanCommand}" Width="100"/>
            <Button Content="Add Folder" Command="{Binding AddFolderCommand}" Width="120" Margin="0,5,0,0" HorizontalAlignment="Left"/>
            <Button Content="Cancel" Command="{Binding CancelCommand}" Width="100"/>
            <Button Content="Delete Selected" Command="{Binding DeleteSelectedCommand}" Width="120"/>
            <Button Content="Copy Visible Files" Command="{Binding CopyFilesCommand}"/>
            <TextBlock Text="Selected Algorithm:" VerticalAlignment="Center" Margin="10,0,0,0"/>
            <ComboBox ItemsSource="{Binding CompareAlgorithms}" SelectedItem="{Binding SelectedAlgorithm, Mode=TwoWay}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <!-- Binding here is each enum value, not the ViewModel -->
                        <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </StackPanel>

        <!-- Folder List -->
        <GroupBox Header="Folders to Scan" Grid.Row="1" Margin="0,0,0,10">
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <StackPanel>
                    <!-- List of currently added folders -->
                    <ItemsControl ItemsSource="{Binding Folders}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <DockPanel Margin="2">
                                    <!-- visibility checkbox -->
                                    <CheckBox Content="{Binding Path}"
                                              IsChecked="{Binding IsVisible, Mode=TwoWay}"
                                              Checked="FolderVisibilityChanged"
                                              Unchecked="FolderVisibilityChanged"
                                              Margin="5,0"/>
                                    <!-- Remove button -->
                                    <Button Content="Remove"
                                            Width="70"
                                            CommandParameter="{Binding}"
                                            Click="RemoveFolder_Click"
                                            DockPanel.Dock="Right"/>
                                </DockPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>
            </ScrollViewer>
        </GroupBox>

        <GridSplitter Grid.Row="2"
              Height="6"
              Background="#FFB0B0B0"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Center"
              Cursor="SizeNS"
              ResizeDirection="Rows"
              ResizeBehavior="PreviousAndNext"/>
        
        <!-- Files List -->
        <DataGrid Grid.Row="3" ItemsSource="{Binding FilesView}" AutoGenerateColumns="False" CanUserAddRows="False" IsReadOnly="True">
            <!-- Hide selection highlight colors -->
            <DataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent"/>
            </DataGrid.Resources>
            
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                        <Style.Triggers>
                        <!-- Highlight files marked for deletion in light red -->
                        <DataTrigger Binding="{Binding State}" Value="delete">
                            <Setter Property="Background" Value="#FFFFC0C0"/>
                            <!-- light red -->
                        </DataTrigger>

                        <!-- Highlight files marked to keep in light green -->
                        <DataTrigger Binding="{Binding State}" Value="keep">
                            <Setter Property="Background" Value="#FFC0FFC0"/>
                            <!-- light green -->
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            
            <DataGrid.Columns>
                <DataGridTextColumn Header="Filename" Binding="{Binding Filename}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Size" Binding="{Binding Size, Converter={StaticResource ByteSizeConverter}}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Hash" Binding="{Binding HashString}" IsReadOnly="True"/>
                <DataGridTemplateColumn Header="State" Width="120">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Border Background="Transparent"
                                    MouseLeftButtonDown="StateCell_MouseLeftButtonDown"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <!-- Only show clickable cursor and hover highlight for keep/delete -->
                                            <DataTrigger Binding="{Binding State}" Value="keep">
                                                <Setter Property="Cursor" Value="Hand"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding State}" Value="delete">
                                                <Setter Property="Cursor" Value="Hand"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <TextBlock Text="{Binding State}"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           FontWeight="Bold"/>
                            </Border>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

        <!-- Progress and Stats -->
        <StackPanel Grid.Row="4" Orientation="Horizontal" VerticalAlignment="Center" Margin="0,10,0,0">
            <!-- Percentage text -->
            <TextBlock Text="{Binding ProgressValue, StringFormat={}{0:0.00}%}" 
               VerticalAlignment="Center" Width="50" TextAlignment="Right"/>

            <!-- Progress bar -->
            <ProgressBar Width="300" Height="20" Value="{Binding ProgressValue}" Maximum="100"/>

            <!-- ETA -->
            <TextBlock Text="{Binding EtaText}" VerticalAlignment="Center"/>

            <!-- Stats -->
            <TextBlock Text="{Binding TotalData, Converter={StaticResource ByteSizeConverter}, StringFormat=Total: {0}}" VerticalAlignment="Center"/>
            <TextBlock Text="{Binding UniqueData, Converter={StaticResource ByteSizeConverter}, StringFormat=Unique: {0}}" VerticalAlignment="Center"/>
            <TextBlock Text="{Binding DeleteData, Converter={StaticResource ByteSizeConverter}, StringFormat=To Delete: {0}}" VerticalAlignment="Center"/>
            <TextBlock Text="{Binding KeepData, Converter={StaticResource ByteSizeConverter}, StringFormat=To Keep: {0}}" VerticalAlignment="Center"/>
            <TextBlock Text="{Binding TotalAfterDelete, Converter={StaticResource ByteSizeConverter}, StringFormat=Total After Delete: {0}}" VerticalAlignment="Center"/>
        </StackPanel>
    </Grid>
</Window>
