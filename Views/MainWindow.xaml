<Window x:Class="DuplicateDetector.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:DuplicateDetector.ViewModels"
        xmlns:conv="clr-namespace:DuplicateDetector.Converters"
        mc:Ignorable="d"
        Title="Duplicate Detector" Height="600" Width="900">

    <Window.DataContext>
        <vm:MainViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <conv:ByteSizeConverter x:Key="ByteSizeConverter"/>
        <conv:EnumDescriptionConverter x:Key="EnumDescriptionConverter"/>
        <conv:PercentToStarConverter x:Key="PercentToStarConverter"/>
    </Window.Resources>

    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Toolbar -->
        <Menu Grid.ColumnSpan="3">
            <MenuItem Header="Help"/>
        </Menu>
        
        <!-- control -->
        <GroupBox Header="Control" Grid.Row="1">
            <StackPanel>
                <Button Content="Cancel" Command="{Binding CancelCommand}"/>
                <Button Content="Scan" Command="{Binding ScanCommand}"/>
                <Button Content="Delete Selected" Command="{Binding DeleteSelectedCommand}"/>
                <Button Content="Copy Visible Files" Command="{Binding CopyFilesCommand}"/>
                <TextBlock Text="Selected Algorithm:"/>
                <ComboBox ItemsSource="{Binding CompareAlgorithms}" SelectedItem="{Binding SelectedAlgorithm, Mode=TwoWay}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <!-- Binding here is each enum value, not the ViewModel -->
                            <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </StackPanel>
        </GroupBox>

        <!-- stats -->
        <GroupBox Header="Stats" Grid.Row="2">
            <!-- Progress and Stats -->
            <StackPanel>
                <!-- Percentage text -->
                <TextBlock Text="{Binding ProgressValue, StringFormat={}{0:0.00}%}"/>

                <!-- Progress bar -->
                <ProgressBar Value="{Binding ProgressValue}" Maximum="100"/>

                <!-- ETA -->
                <TextBlock Text="{Binding EtaText}"/>

                <!-- Stats -->
                <TextBlock Text="{Binding TotalData, Converter={StaticResource ByteSizeConverter}, StringFormat=Total: {0}}"/>
                <TextBlock Text="{Binding UniqueData, Converter={StaticResource ByteSizeConverter}, StringFormat=Unique: {0}}" Background="LightBlue"/>
                <TextBlock Text="{Binding DeleteData, Converter={StaticResource ByteSizeConverter}, StringFormat=To Delete: {0}}" Background="#FFFFC0C0"/>
                <TextBlock Text="{Binding KeepData, Converter={StaticResource ByteSizeConverter}, StringFormat=To Keep: {0}}" Background="#FFC0FFC0"/>
                <TextBlock Text="{Binding TotalAfterDelete, Converter={StaticResource ByteSizeConverter}, StringFormat=Total After Delete: {0}}"/>

                <!-- Visual stat representation -->
                <TextBlock Text="File Breakdown:"/>
                <Grid Height="25" HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding KeepPercentage, Converter={StaticResource PercentToStarConverter}}"/>
                        <ColumnDefinition Width="{Binding DeletePercentage, Converter={StaticResource PercentToStarConverter}}"/>
                        <ColumnDefinition Width="{Binding UniquePercentage, Converter={StaticResource PercentToStarConverter}}"/>
                    </Grid.ColumnDefinitions>

                    <Border Grid.Column="0" Background="#FFC0FFC0"/>
                    <Border Grid.Column="1" Background="#FFFFC0C0"/>
                    <Border Grid.Column="2" Background="LightBlue"/>
                </Grid>
            </StackPanel>
        </GroupBox>

        <!-- Folder List -->
        <GroupBox Header="Folders to Scan" Grid.Row="1" Grid.Column="1" Grid.RowSpan="2">
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <StackPanel>
                    <!-- List of currently added folders -->
                    <ItemsControl ItemsSource="{Binding Folders}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <!-- Folder path -->
                                        <ColumnDefinition Width="Auto" />
                                        <!-- Remove button -->
                                    </Grid.ColumnDefinitions>

                                    <!-- Checkbox and path -->
                                    <CheckBox Grid.Column="0"
                                      Content="{Binding Path}"
                                      IsChecked="{Binding IsVisible, Mode=TwoWay}"
                                      Checked="FolderVisibilityChanged"
                                      Unchecked="FolderVisibilityChanged"/>

                                    <!-- Remove button -->
                                    <Button Grid.Column="1"
                                    Content="Remove"
                                    CommandParameter="{Binding}"
                                    Click="RemoveFolder_Click"/>
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <Button Content="Add Folder" Command="{Binding AddFolderCommand}" Width="120" HorizontalAlignment="Left"/>
                </StackPanel>
            </ScrollViewer>
        </GroupBox>
        
        <!-- Files List -->
        <GroupBox Header="Folders to Scan" Grid.Row="1" Grid.Column="2" Grid.RowSpan="2">
            <DataGrid ItemsSource="{Binding FilesView}" AutoGenerateColumns="False" CanUserAddRows="False" IsReadOnly="True">
                <!-- Hide selection highlight colors -->
                <DataGrid.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black"/>
                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent"/>
                    <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent"/>
                </DataGrid.Resources>

                <!-- Highlight files marked for deletion in light red and keep in light green-->
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding State}" Value="delete">
                                <Setter Property="Background" Value="#FFFFC0C0"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding State}" Value="keep">
                                <Setter Property="Background" Value="#FFC0FFC0"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding State}" Value="unique">
                                <Setter Property="Background" Value="LightBlue"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>

                <!-- define columns to display -->
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Filename" Binding="{Binding Filename}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Size" Binding="{Binding Size, Converter={StaticResource ByteSizeConverter}}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Hash" Binding="{Binding HashString}" IsReadOnly="True"/>
                    <DataGridTemplateColumn Header="State" Width="120">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border Background="Transparent" MouseLeftButtonDown="StateCell_MouseLeftButtonDown" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <!-- Only show clickable cursor and hover highlight for keep/delete -->
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding State}" Value="keep">
                                                    <Setter Property="Cursor" Value="Hand"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding State}" Value="delete">
                                                    <Setter Property="Cursor" Value="Hand"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <TextBlock Text="{Binding State}" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Bold"/>
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </GroupBox>

        <!-- Status Bar at the bottom -->
        <StatusBar Grid.Row="3" Grid.ColumnSpan="3">
            <TextBlock Text="{Binding Version}" />
        </StatusBar>
    </Grid>
</Window>
